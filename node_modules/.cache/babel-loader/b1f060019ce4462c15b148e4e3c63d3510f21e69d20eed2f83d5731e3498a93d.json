{"ast":null,"code":"import _objectSpread from \"E:/Education/6_Fall- 2022/SP_4/mostafizur-profile/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"E:/Education/6_Fall- 2022/SP_4/mostafizur-profile/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Education/6_Fall- 2022/SP_4/mostafizur-profile/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isElement, toType } from './index';\nimport Manipulator from '../dom/manipulator';\n\n/**\n * Class definition\n */\nvar Config = /*#__PURE__*/function () {\n  function Config() {\n    _classCallCheck(this, Config);\n  }\n  _createClass(Config, [{\n    key: \"_getConfig\",\n    value: function _getConfig(config) {\n      config = this._mergeConfigObj(config);\n      config = this._configAfterMerge(config);\n      this._typeCheckConfig(config);\n      return config;\n    }\n  }, {\n    key: \"_configAfterMerge\",\n    value: function _configAfterMerge(config) {\n      return config;\n    }\n  }, {\n    key: \"_mergeConfigObj\",\n    value: function _mergeConfigObj(config, element) {\n      var jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.constructor.Default), typeof jsonConfig === 'object' ? jsonConfig : {}), isElement(element) ? Manipulator.getDataAttributes(element) : {}), typeof config === 'object' ? config : {});\n    }\n  }, {\n    key: \"_typeCheckConfig\",\n    value: function _typeCheckConfig(config) {\n      var configTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.constructor.DefaultType;\n      for (var _i = 0, _Object$keys = Object.keys(configTypes); _i < _Object$keys.length; _i++) {\n        var property = _Object$keys[_i];\n        var expectedTypes = configTypes[property];\n        var value = config[property];\n        var valueType = isElement(value) ? 'element' : toType(value);\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new TypeError(\"\".concat(this.constructor.NAME.toUpperCase(), \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\".\"));\n        }\n      }\n    }\n  }], [{\n    key: \"Default\",\n    get:\n    // Getters\n    function get() {\n      return {};\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n  }]);\n  return Config;\n}();\nexport default Config;","map":{"version":3,"names":["isElement","toType","Manipulator","Config","config","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","element","jsonConfig","getDataAttribute","constructor","Default","getDataAttributes","configTypes","DefaultType","Object","keys","property","expectedTypes","value","valueType","RegExp","test","TypeError","NAME","toUpperCase","Error"],"sources":["E:/Education/6_Fall- 2022/SP_4/mostafizur-profile/node_modules/bootstrap/js/src/util/config.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isElement, toType } from './index'\nimport Manipulator from '../dom/manipulator'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const property of Object.keys(configTypes)) {\n      const expectedTypes = configTypes[property]\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,SAAS;AAC3C,OAAOC,WAAW,MAAM,oBAAoB;;AAE5C;AACA;AACA;AAFA,IAIMC,MAAM;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAcV,oBAAWC,MAAM,EAAE;MACjBA,MAAM,GAAG,IAAI,CAACC,eAAe,CAACD,MAAM,CAAC;MACrCA,MAAM,GAAG,IAAI,CAACE,iBAAiB,CAACF,MAAM,CAAC;MACvC,IAAI,CAACG,gBAAgB,CAACH,MAAM,CAAC;MAC7B,OAAOA,MAAM;IACf;EAAC;IAAA;IAAA,OAED,2BAAkBA,MAAM,EAAE;MACxB,OAAOA,MAAM;IACf;EAAC;IAAA;IAAA,OAED,yBAAgBA,MAAM,EAAEI,OAAO,EAAE;MAC/B,IAAMC,UAAU,GAAGT,SAAS,CAACQ,OAAO,CAAC,GAAGN,WAAW,CAACQ,gBAAgB,CAACF,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAC;;MAE7F,mEACK,IAAI,CAACG,WAAW,CAACC,OAAO,GACvB,OAAOH,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAG,CAAC,CAAC,GAChDT,SAAS,CAACQ,OAAO,CAAC,GAAGN,WAAW,CAACW,iBAAiB,CAACL,OAAO,CAAC,GAAG,CAAC,CAAC,GAChE,OAAOJ,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG,CAAC,CAAC;IAEhD;EAAC;IAAA;IAAA,OAED,0BAAiBA,MAAM,EAA8C;MAAA,IAA5CU,WAAW,uEAAG,IAAI,CAACH,WAAW,CAACI,WAAW;MACjE,gCAAuBC,MAAM,CAACC,IAAI,CAACH,WAAW,CAAC,kCAAE;QAA5C,IAAMI,QAAQ;QACjB,IAAMC,aAAa,GAAGL,WAAW,CAACI,QAAQ,CAAC;QAC3C,IAAME,KAAK,GAAGhB,MAAM,CAACc,QAAQ,CAAC;QAC9B,IAAMG,SAAS,GAAGrB,SAAS,CAACoB,KAAK,CAAC,GAAG,SAAS,GAAGnB,MAAM,CAACmB,KAAK,CAAC;QAE9D,IAAI,CAAC,IAAIE,MAAM,CAACH,aAAa,CAAC,CAACI,IAAI,CAACF,SAAS,CAAC,EAAE;UAC9C,MAAM,IAAIG,SAAS,WACd,IAAI,CAACb,WAAW,CAACc,IAAI,CAACC,WAAW,EAAE,wBAAaR,QAAQ,gCAAoBG,SAAS,oCAAwBF,aAAa,SAC9H;QACH;MACF;IACF;EAAC;IAAA;IAAA;IA/CD;IACA,eAAqB;MACnB,OAAO,CAAC,CAAC;IACX;EAAC;IAAA;IAAA,KAED,eAAyB;MACvB,OAAO,CAAC,CAAC;IACX;EAAC;IAAA;IAAA,KAED,eAAkB;MAChB,MAAM,IAAIQ,KAAK,CAAC,qEAAqE,CAAC;IACxF;EAAC;EAAA;AAAA;AAuCH,eAAexB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}